{"version":3,"sources":["components/OctocatCorner.tsx","util/splitWordAndPos.ts","components/SenseDiffLink.tsx","components/FaqItem.tsx","components/Faq.tsx","pages/IntroPage.tsx","util/useQueryParams.ts","pages/DiffPage.tsx","config.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["OctocatCorner","href","className","aria-label","width","height","viewBox","style","fill","color","position","top","border","right","aria-hidden","d","transformOrigin","splitWordAndPos","sense","split","rawWord","pos","word","replace","SenseDiffLink","leftSense","rightSense","dest","leftData","rightData","to","FaqItem","title","children","Faq","IntroPage","useQueryParams","URLSearchParams","useLocation","search","DiffPage","query","left","get","useQuery","fetch","process","then","res","json","isLoading","error","data","message","topLeftSenses","map","topRightSenses","queryClient","QueryClient","App","QueryClientProvider","client","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.711bee45.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./OctocatCorner.css\";\n\n// from https://tholman.com/github-corners/\nconst OctocatCorner = () => (\n  <a\n    href=\"https://github.com/chanind/reddit-words\"\n    className=\"OctocatCorner\"\n    aria-label=\"View source on GitHub\"\n  >\n    <svg\n      width=\"80\"\n      height=\"80\"\n      viewBox=\"0 0 250 250\"\n      style={{\n        fill: \"#fff\",\n        color: \"#282c34\",\n        position: \"absolute\",\n        top: 0,\n        border: 0,\n        right: 0,\n      }}\n      aria-hidden=\"true\"\n    >\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n      <path\n        d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n        fill=\"currentColor\"\n        style={{ transformOrigin: \"130px 106px\" }}\n        className=\"OctocatCorner-arm\"\n      ></path>\n      <path\n        d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n        fill=\"currentColor\"\n        className=\"OctocatCorner-body\"\n      ></path>\n    </svg>\n  </a>\n);\n\nexport default OctocatCorner;\n","const splitWordAndPos = (sense: string) => {\n  const [rawWord, pos] = sense.split(\"|\");\n  const word = rawWord\n    .replace(/_/gi, \" \")\n    .replace(\"&amp;\", \"&\")\n    .replace(\"&amp;\", \"&\")\n    .replace(\"&amp\", \"&\");\n  return { word, pos };\n};\n\nexport default splitWordAndPos;\n","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport splitWordAndPos from \"../util/splitWordAndPos\";\n\nexport interface SenseDiffLinkProps {\n  leftSense: string;\n  rightSense: string;\n}\n\nconst SenseDiffLink: FC<SenseDiffLinkProps> = ({ leftSense, rightSense }) => {\n  const dest = `/diff?left=${leftSense}&right=${rightSense}`;\n  const leftData = splitWordAndPos(leftSense);\n  const rightData = splitWordAndPos(rightSense);\n  return (\n    <Link\n      to={dest}\n      className=\"flex p-3 rounded border border-blue-100 bg-opacity-5 bg-gray-400 hover:bg-opacity-10\"\n    >\n      <div>\n        <span className=\"inline-block pr-1\">{leftData.word}</span>\n        <span className=\"text-gray-400 text-xs\">{leftData.pos}</span>\n      </div>\n      <div className=\"px-2\"> &minus; </div>\n      <div>\n        <span className=\"inline-block pr-1\">{rightData.word}</span>\n        <span className=\"text-gray-400 text-xs\">{rightData.pos}</span>\n      </div>\n    </Link>\n  );\n};\n\nexport default SenseDiffLink;\n","import React, { FC, ReactNode } from \"react\";\n\ninterface FaqItemProps {\n  title: string;\n  children: ReactNode;\n}\n\nconst FaqItem: FC<FaqItemProps> = ({ title, children }) => (\n  <div>\n    <div className=\"text-xl mb-2\">{title}</div>\n    <p className=\"text-sm text-gray-400\">{children}</p>\n  </div>\n);\n\nexport default FaqItem;\n","import React, { FC } from \"react\";\nimport FaqItem from \"./FaqItem\";\n\nconst Faq: FC = () => (\n  <div className=\"text-left\">\n    <div className=\"my-10\">\n      <FaqItem title=\"How does this work?\">\n        This works by subtracting 2 word vectors to determine a concept which\n        represents the difference between those 2 words, and then finds the 100\n        words in the dataset which have the maximum and minimum scores when\n        projected along that concept dimension. For example, we can get at the\n        concept of \"happiness\" by subtracting the word vector for \"happy\" and\n        the word vector for \"unhappy\". Then, we can find the most and least\n        \"happy\" words in the dataset by projecting the remaining word vectors\n        along that \"happiness\" direction.\n        <br />\n        <br />\n        This can be give insight in two ways. For words where the difference\n        between the words is a clear concept, ex \"happiness\" = \"happy\" -\n        \"unhappy\", the words listed are what Reddit has taught the sense vectors\n        about the concept of \"happiness\". For words whose difference has a less\n        obvious meaning, ex \"Obama\" - \"Trump\" = ?, looking at the listed words\n        can give an idea of what the sense vectors trained on Reddit think the\n        difference is between these 2 words.\n      </FaqItem>\n    </div>\n    <div className=\"my-10\">\n      <FaqItem title=\"Where does this data come from?\">\n        The dataset used is{\" \"}\n        <a\n          className=\"underline\"\n          href=\"https://github.com/explosion/sense2vec#pretrained-vectors\"\n        >\n          Spacy's official pretrained sense2vec sense vectors\n        </a>{\" \"}\n        trained on a dump of Reddit from 2019.\n      </FaqItem>\n    </div>\n    <div className=\"my-10\">\n      <FaqItem title=\"I have an idea to improve this project!\">\n        Contributions are always welcome! You can check out the code in the{\" \"}\n        <a className=\"underline\" href=\"https://github.com/chanind/reddit-words\">\n          reddit-words github repo\n        </a>{\" \"}\n        and open pull requests and issues there.\n      </FaqItem>\n    </div>\n    <div className=\"my-10\">\n      <FaqItem title=\"Work with me!\">\n        I'm interested in doing a PhD in NLP in 2022, and would love to work\n        with researchers doing NLP work in the meantime. Please reach out at{\" \"}\n        <a className=\"underline\" href=\"mailto:chanindav@gmail.com\">\n          chanindav@gmail.com\n        </a>{\" \"}\n        if you have a project I can be a part of.\n      </FaqItem>\n    </div>\n  </div>\n);\n\nexport default Faq;\n","import React from \"react\";\nimport SenseDiffLink from \"../components/SenseDiffLink\";\nimport Faq from \"../components/Faq\";\n\nconst IntroPage = () => {\n  return (\n    <div className=\"p-2\">\n      <h1 className=\"text-6xl p-10\">Reddit Words</h1>\n      <p>\n        What did{\" \"}\n        <a href=\"https://github.com/explosion/sense2vec\" className=\"underline\">\n          Spacy's offical sense2vec\n        </a>{\" \"}\n        word vectors learn about the world from Reddit in 2019? Click on a\n        dimension below to find out!\n      </p>\n      <div className=\"flex flex-wrap justify-center pt-10 max-w-screen-lg mx-auto \">\n        <div className=\"p-2\">\n          <SenseDiffLink\n            leftSense=\"Communism|NOUN\"\n            rightSense=\"Capitalism|NOUN\"\n          />\n        </div>\n        <div className=\"p-2\">\n          <SenseDiffLink leftSense=\"east|NOUN\" rightSense=\"west|NOUN\" />\n        </div>\n        <div className=\"p-2\">\n          <SenseDiffLink leftSense=\"north|NOUN\" rightSense=\"south|NOUN\" />\n        </div>\n        <div className=\"p-2\">\n          <SenseDiffLink leftSense=\"USA|GPE\" rightSense=\"France|GPE\" />\n        </div>\n        <div className=\"p-2\">\n          <SenseDiffLink leftSense=\"USA|GPE\" rightSense=\"China|GPE\" />\n        </div>\n        <div className=\"p-2\">\n          <SenseDiffLink leftSense=\"smart|ADJ\" rightSense=\"stupid|ADJ\" />\n        </div>\n        <div className=\"p-2\">\n          <SenseDiffLink leftSense=\"Tokyo|GPE\" rightSense=\"New_York|GPE\" />\n        </div>\n        <div className=\"p-2\">\n          <SenseDiffLink leftSense=\"happy|ADJ\" rightSense=\"unhappy|ADJ\" />\n        </div>\n        <div className=\"p-2\">\n          <SenseDiffLink leftSense=\"Trump|PERSON\" rightSense=\"Obama|PERSON\" />\n        </div>\n        <div className=\"p-2\">\n          <SenseDiffLink\n            leftSense=\"North_Korea|GPE\"\n            rightSense=\"South_Korea|GPE\"\n          />\n        </div>\n      </div>\n      <div className=\"pt-10 max-w-screen-lg mx-auto \">\n        <Faq />\n      </div>\n    </div>\n  );\n};\n\nexport default IntroPage;\n","import { useLocation } from \"react-router-dom\";\n\n/** Helper hook for parsing the query params from react-router */\nconst useQueryParams = () => new URLSearchParams(useLocation().search);\n\nexport default useQueryParams;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport splitWordAndPos from \"../util/splitWordAndPos\";\nimport useQueryParams from \"../util/useQueryParams\";\nimport { API_HOST } from \"../config\";\nimport { useQuery } from \"react-query\";\nimport \"./DiffPage.css\";\n\nconst DiffPage = () => {\n  const query = useQueryParams();\n  const left = query.get(\"left\");\n  const right = query.get(\"right\");\n  const { isLoading, error, data } = useQuery<biasQueryResults>(\n    `${left}-${right}`,\n    () =>\n      fetch(`${API_HOST}/bias-rank?leftSense=${left}&rightSense=${right}`).then(\n        (res) => res.json()\n      )\n  );\n\n  interface biasQueryResults {\n    topLeftSenses: [string, number][];\n    topRightSenses: [string, number][];\n  }\n\n  return (\n    <div>\n      <div className=\"my-5 mx-3 md:mx-10 md:mb-10 relative\">\n        <Link to=\"/\" className=\"DiffPage-backLink left-0 absolute top-0\">\n          <span className=\"DiffPage-backLinkArrow\">←</span> back\n        </Link>\n        <Link to=\"/\" className=\"text-2xl\">\n          Reddit Words\n        </Link>\n      </div>\n\n      {left && right ? (\n        <>\n          <div className=\"text-4xl flex justify-center gap-1\">\n            <div>\n              <span className=\"pr-2\">{splitWordAndPos(left).word}</span>\n              <span className=\"text-gray-400 text-xl hidden md:inline\">\n                {splitWordAndPos(left).pos}\n              </span>\n            </div>\n            <div className=\"px-2\">&minus;</div>\n            <div>\n              <span className=\"pr-2\">{splitWordAndPos(right).word}</span>\n              <span className=\"text-gray-400 text-xl hidden md:inline\">\n                {splitWordAndPos(right).pos}\n              </span>\n            </div>\n          </div>\n          {error && (\n            <div className=\"my-7 p-3 rounded border border-red-500 text-red-400 inline-block\">\n              ⚠ {(error as any).message}\n            </div>\n          )}\n          {isLoading && <div className=\"animate-spin text-4xl\">◑</div>}\n          {data && (\n            <div className=\"grid grid-cols-2 max-w-screen-lg mx-auto\">\n              <div>\n                <h1 className=\"py-5 text-xl\">\n                  ← <span className=\"hidden md:inline\">towards</span>{\" \"}\n                  <b>{splitWordAndPos(left).word}</b>\n                </h1>\n                <div>\n                  {data.topLeftSenses.map(([sense]) => (\n                    <div className=\"text-gray-300 pb-1\">\n                      {splitWordAndPos(sense).word}\n                      <span className=\"text-gray-400 pl-1 text-sm hidden md:inline\">\n                        {splitWordAndPos(sense).pos}\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div>\n                <h1 className=\"py-5 text-xl\">\n                  <span className=\"hidden md:inline\">towards</span>{\" \"}\n                  <b>{splitWordAndPos(right).word}</b> →\n                </h1>\n                <div>\n                  {data.topRightSenses.map(([sense]) => (\n                    <div className=\"text-gray-300 pb-1\">\n                      {splitWordAndPos(sense).word}\n                      <span className=\"text-gray-400 pl-1 text-sm hidden md:inline\">\n                        {splitWordAndPos(sense).pos}\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          )}\n        </>\n      ) : (\n        <div className=\"text-4xl\">Oh no! Page not found :'(</div>\n      )}\n    </div>\n  );\n};\n\nexport default DiffPage;\n","export const API_HOST =\n  process.env.REACT_APP_API_HOST || \"http://localhost:5000\";\n","import React from \"react\";\nimport \"./App.css\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport OctocatCorner from \"./components/OctocatCorner\";\nimport IntroPage from \"./pages/IntroPage\";\nimport DiffPage from \"./pages/DiffPage\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <div className=\"App text-blue-50\">\n        <OctocatCorner />\n        <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <IntroPage />\n            </Route>\n            <Route exact path=\"/diff\">\n              <DiffPage />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}